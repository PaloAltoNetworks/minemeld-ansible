# clone the core repo and set permissions
- name: minemeld-core repo
  git: 
    repo: "{{core_repo}}"
    clone: yes
    dest: "{{engine_directory}}/core"
    version: "{{minemeld_core_version}}"

# creates the virtualenv in the engine/current directory and install reqs
- name: virtualenv
  pip:
    name: virtualenv
- name: minemeld virtualenv
  command: virtualenv "{{venv_directory}}" -p "{{python_executable}}" creates="{{venv_directory}}"
- name: virtualenv permissions
  file: path="{{venv_directory}}" state=directory recurse=yes owner=minemeld group=minemeld mode="{{file_permissions}}"
- name: requirements
  pip:
    virtualenv: "{{venv_directory}}"
    requirements: "{{engine_directory}}/core/requirements.txt"
- name: requirements web
  pip:
    virtualenv: "{{venv_directory}}"
    requirements: "{{engine_directory}}/core/requirements-web.txt"
- name: requirements dev
  pip:
    virtualenv: "{{venv_directory}}"
    requirements: "{{engine_directory}}/core/requirements-dev.txt"
- name: install engine
  command: "{{venv_directory}}/bin/pip install -e {{engine_directory}}/core"
- name: create extensions frigidaire
  command: "{{venv_directory}}/bin/mm-extensions-freeze {{library_directory}} {{library_directory}}/freeze.txt"
- name: create constraints file
  shell: "{{venv_directory}}/bin/pip freeze | grep -v minemeld-core > {{library_directory}}/constraints.txt"
- name: create config file
  file: path="{{certs_directory}}/cacert-merge-config.yml" state=touch owner=minemeld group=minemeld mode="{{file_permissions}}"
- name: create CA bundle
  shell: "{{venv_directory}}/bin/mm-cacert-merge --config {{certs_directory}}/cacert-merge-config.yml --dst {{certs_directory}}/bundle.crt {{local_ca_directory}}"
  args:
      creates: "{{certs_directory}}/bundle.crt"

# services configs
- name: minemeld-engine config
  copy:
    force: no
    dest: "{{config_directory}}/committed-config.yml"
    src: committed-config.yml
    owner: minemeld
    group: minemeld
    mode: 0644
- name: minemeld-traced config
  copy:
    force: no
    dest: "{{traced_config_directory}}/traced.yml"
    src: traced.yml
    owner: minemeld
    group: minemeld
    mode: 0644
- name: minemeld-web config defaults
  template:
    dest: "{{api_config_directory}}/10-defaults.yml"
    src: 10-defaults.yml.j2
    owner: minemeld
    group: minemeld
    mode: 0644
- name: minemeld-web config local
  template:
    force: no
    dest: "{{api_config_directory}}/20-local.yml"
    src: 20-local.yml.j2
    owner: minemeld
    group: minemeld
    mode: 0644
- name: minemeld-web users
  copy:
    force: no
    dest: "{{api_config_directory}}/wsgi.htpasswd"
    src: wsgi.htpasswd
    owner: minemeld
    group: minemeld
    mode: 0640

# supervisor config
- name: supervisor config
  template:
    src: supervisord.conf.j2
    dest: "{{supervisor_directory}}/config/supervisord.conf"
    owner: minemeld
    group: minemeld
    mode: 0644
- name: supervisor minemeld-engine program
  template:
    src: minemeld-engine.supervisord.j2
    dest: "{{supervisor_directory}}/config/conf.d/minemeld-engine.conf"
    owner: minemeld
    group: minemeld
    mode: 0644
- name: supervisor minemeld-web program
  template:
    src: minemeld-web.supervisord.j2
    dest: "{{supervisor_directory}}/config/conf.d/minemeld-web.conf"
    owner: minemeld
    group: minemeld
    mode: 0644
- name: supervisor minemeld-traced program
  template:
    src: minemeld-traced.supervisord.j2
    dest: "{{supervisor_directory}}/config/conf.d/minemeld-traced.conf"
    owner: minemeld
    group: minemeld
    mode: 0644
- name: supervisor minemeld-supervisord-listener
  template:
    src: minemeld-supervisord-listener.supervisord.j2
    dest: "{{supervisor_directory}}/config/conf.d/minemeld-supervisord-listener.conf"
    owner: minemeld
    group: minemeld
    mode: 0644
